<?xml version="1.0"?>
<launch>
  <!-- Formula Student SLAM System Launch File -->
  
  <!-- Arguments -->
  <arg name="robot_frame" default="base_link" />
  <arg name="map_frame" default="map" />
  <arg name="odom_frame" default="odom" />
  <arg name="enable_visualization" default="true" />
  
  <!-- EKF SLAM Node -->
  <node name="ekf_slam_node" pkg="fs_slam" type="ekf_slam_node.py" output="screen">
    <!-- Frame parameters -->
    <param name="robot_frame" value="$(arg robot_frame)" />
    <param name="map_frame" value="$(arg map_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />
    
    <!-- EKF parameters -->
    <param name="process_noise_std" value="0.1" />
    <param name="measurement_noise_std" value="0.5" />
    
    <!-- Data association parameters -->
    <param name="max_association_distance" value="2.0" />
    <param name="mahalanobis_threshold" value="9.21" />
    
    <!-- Perception parameters -->
    <param name="min_cluster_size" value="5" />
    <param name="max_cluster_size" value="50" />
    <param name="cluster_distance_threshold" value="0.5" />
  </node>
  
  <!-- Static transform publisher for sensor frame -->
  <node name="sensor_tf_publisher" pkg="tf2_ros" type="static_transform_publisher"
        args="0 0 0.5 0 0 0 $(arg robot_frame) velodyne" />
  
  <!-- Visualization nodes (optional) -->
  <group if="$(arg enable_visualization)">
    <!-- RViz configuration -->
    <node name="rviz" pkg="rviz" type="rviz" 
          args="-d $(find fs_slam)/config/slam_visualization.rviz" 
          output="screen" />
  </group>
  
  <!-- Robot state publisher (if needed) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" value="30.0" />
  </node>
  
</launch> 